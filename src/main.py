
from calendar import calendar as cal
from content_parser import (
    categorize_elements, 
    clean_elements, 
    count_element_frequencies, 
    get_first_part_element_from_list
)
from generate_php_array_filters import generate_filter_ids
from generate_php_array_images import create_pf_gallery_settings, serialize_dictionary
from scraper import make_http_request, parse_content_by_class

# Constants and URLs
URL = "https://www.abedeverteller.nl/groene-mannen-van-nederland/"
CLASS_NAME = "wp-caption-text gallery-caption"
IMAGE_ID_LIST = [8158,8159,8164,8160,8161,8162,8484,8485,8486,8349,8263,5058,3523,3524,3525,3526,3527,8165,8260,8338,8339,8341,8340,6895,8262,8261,9156,8264,8178,8190,8189,2164,2163,2162,2161,2160,2159,1701,1700,1702,1703,1704,1705,1706,1707,1708,1709,1710,1711,1712,1713,8170,1714,8184,8192,8193,8375,3532,8376,1719,8377,8188,8182,8180,8179,8186,8185,1722,7883,1724,1725,7884,8378,1715,1716,1720,1721,1717,1718,8191,8384,8383,8379,8381,8183,8380,7562,7561,7886,7885,7887,1723,9165,7888,7889,7890,6567,6558,6569,6557,6556,6561,6560,6555,6562,6565,6564,6570,6559,6568,6563,6566,7840,9145,7839,8197,8198,8195,8196,8199,7891,7892,7893,7894,8382,1726,7897,7895,7896,10053,10054,1740,1741,3529,3530,3531,1743,1746,9568,9569,5977,6258,7625,7626,7627,5008,9149,7833,7832,8019,8018,6242,9150,1779,7857,3514,7359,8024,8025,8028,8026,8030,8029,7361,8023,8344,9152,8021,8020,9162,7502,7508,7504,7503,7506,7505,7507,7340,7338,7339,6741,6725,6726,6727,6738,6740,6739,6728,6729,6737,6731,6735,6732,6733,6734,6736,6730,8086,4993,4995,8087,4994,4996,4988,4989,4987,4990,4992,9155,3571,3568,3573,8104,3560,3545,3542,3577,3578,3575,3579,3576,3565,3558,3561,3562,3543,3563,3559,3541,3544,3550,3551,3552,3556,3555,3548,3553,1909,1910,1911,1912,1913,1914,1915,1916,8099,8102,8100,7364,8345,1917,1918,1920,7354,7355,7356,8092,8090,8089,8098,8095,8093,8094,8091,8097,1923,1922,1921,8103,1919,1780,3513,6181,6171,6167,8118,8117,6169,8116,8119,6184,6170,8115,9763,6180,6179,6178,6177,6176,6175,6174,6172,8122,8123,3519,3518,7620,3520,7621,4984,7363,7362,8125,8126,8127,7622,9579,9584,9580,9583,9582,9587,9585,9586,7346,9157,9573,6241,9835,9836,9837,9838,9839,9768,9769,7842,6056,7841,6066,6064,6065,6069,6063,6067,6068,6062,6061,6060,6059,6057,6058,6280,6282,6281,6283,7845,7846,9764,6285,6284,9088,9139,9089,9132,5948,9628,9629,9090,9091,9092,8694,9627,9093,9135,9134,9138,9137,9094,9630,9623,9626,9625,9622,9624,9095,9098,9097,9102,9100,9101,9103,8707,9105,8709,9631,9106,9099,9108,9107,8746,9109,8714,8721,9110,9113,7977,7366,7365,5920,5921,9116,9115,9114,9120,9121,9119,9122,9123,9124,9140,9125,9126,9130,8731,9131,9128,9127,9129,5929,5927,5949,5930,5928,6539,6538,6541,6540,6542,7981,7843,3587,7980,7979,3586,3585,9158,7563,9159,9161,3515,3516,9574,7373,8157,6897,6896,6898,6899,6900,7323,7324,7326,7327,7325,3517,7357,7435,10026,7436,7437,7444,10027,7438,7816,8236,7837,7439,7835,7836,7440,7445,7441,7442,7443,9697,9696,6244,6361,7987,9698,9699,9700,9701,9703,9704,9702,9695,7854,7855,6234,9714,9713,9720,7985,7986,7984,9706,6362,7367,6235,6128,6127,9717,9718,9707,9708,5958,9710,9709,9712,5954,7856,6363,9716,9715,6245,8014,7991,7990,5932,5934,5933,7368,7994,9692,5935,5936,5938,5939,7852,5007,5005,5004,5006,7825,7826,7827,7822,7823,7824,7821,7819,7820,7817,7818,7834,6250,7997,3604,9163,3600,3601,6254,6255,3594,6253,6252,6251,3596,3595,3598,6543,6249,9164,6548,6544,6547,6546,6549,6545,6240,9575,7344,9193,9190,9194,9192,9578,8947,8003,8005,8006,8008,8007,8004,8000,8001,8002,8009,8010,8011,7337,9840,9843,9841,9842,9844,9845,9846,9847,9848,9850,9851,7348,7347,9168,9166,9852,9853,9854,9855,9856,9857,9858,9859,9860,9861,9862,9863,7371,9865,9866,9867,9868,9869,9870,9872,9873,9874,9875,9883,9876,9877,9882,9878,7345,9169,7343,9171,9174,7564,2173,1756,1749,1758,1757,7828,7939,5945,5944,5943,5946,5942,5941,2172,7946,7945,7948,7949,9154,1751,2171,2170,2169,7953,7830,1773,7829,7831,1752,1771,9188,2175,2174,7940,7942,7941,1759,1760,1761,1762,1763,1764,1765,1766,1768,7951,6551,6552,6553,9175,9185,9183,9184,9186,9187,6237,6239,6288,6287,7565,6238,5955,9646,9647,9648,9649,9650,1781,7353,6036,2165,7515,7510,7514,7513,7512,7511,7516,9576,7350,9189,9577,9792,9793,9794,5971,5972,5961,5962,9795,5964,5965,7934,7933,5969,5970,5966,5967,5968,5973,5974,9804,7376,9796,3582,3584,3583,3581,5996,9147,5997,5998,5999,6000,6001,6002,6003,9144,7916,7914,7915,7917,7918,6004,7369,10056,10057,10058,10059,10060,10061,10062,10063,10283,10236,10235,10234,10233,10232,10231,10230,10229,10228,10227,10226,10225,10224,10223,10222,10221,10300,10299,10298,10297,10296,10295,10294]

# LENGTH_OF_ARRAY = len(IMAGE_ID_LIST)
LENGTH_OF_ARRAY = 50

FILTER_THRESHOLD = 1

# Main processing
http_response = make_http_request(URL)
if isinstance(http_response, str):  # Check for an error response
    print(http_response)
    exit()

parsed_content = parse_content_by_class(http_response, CLASS_NAME)
cleaned_content = clean_elements(parsed_content)
first_elements = get_first_part_element_from_list(cleaned_content)

element_frequencies = count_element_frequencies(first_elements)
elements_above_threshold, elements_below_threshold = categorize_elements(element_frequencies, FILTER_THRESHOLD)

print(f"Elements with more than {FILTER_THRESHOLD} occurrences: {elements_above_threshold}")

# Filter and image ID processing
filtered_elements = first_elements[:LENGTH_OF_ARRAY]
filter_ids = generate_filter_ids(filtered_elements, elements_above_threshold)
truncated_image_ids = IMAGE_ID_LIST[:LENGTH_OF_ARRAY]

gallery_settings = create_pf_gallery_settings(truncated_image_ids, filter_ids)
gallery_settings_array = serialize_dictionary(gallery_settings)

# Writing to Markdown file
with open("first_elements.md", "w") as file:
    #also add cleaned content
    file.write("## First elements\n")
    file.write("| Image ID | Filter | Full String | Filter ID | Count |\n")
    file.write("| ------- | ------- | ----------- | --------- | ----- |\n")    

    freq = [element_frequencies[element] for element in first_elements]
    for img_id, element, cleaned_content, element_id, count in zip(truncated_image_ids, filtered_elements, cleaned_content, filter_ids, freq):
        file.write(f"| {img_id} | {element} | {cleaned_content} | {element_id} | {count} |\n")
        # Validation checks
        if count > FILTER_THRESHOLD:
            assert element in elements_above_threshold
        else:
            assert element in elements_below_threshold
            assert element_id == len(elements_above_threshold) - 1

# Writing PHP array settings
with open("php_array_gallery_settings.txt", "w") as file:
    file.write(gallery_settings_array)

